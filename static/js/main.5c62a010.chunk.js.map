{"version":3,"sources":["components/Encoder.tsx","utils/dtfm.ts","components/App.tsx","index.tsx"],"names":["Encoder","dtfm","Grid","container","spacing","item","xs","Button","onClick","playNote","COL","ROW","LETTERS","split","context","duration","this","window","AudioContext","webkitAudioContext","sym","index","findIndex","x","col","length","row","Math","floor","play","freq1","freq2","osc1","createOscillator","osc2","type","gain1","createGain","gain2","connect","destination","gain","value","setTargetAtTime","currentTime","frequency","start","stop","App","Container","maxWidth","style","padding","Paper","Typography","variant","gutterBottom","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c62a010.chunk.js","sourcesContent":["import React from 'react';\nimport { Grid, Button } from '@material-ui/core';\nimport { DTFM } from '../utils/dtfm';\n\ninterface Props {\n    dtfm : DTFM;\n}\n\nconst Encoder = ({ dtfm } : Props) => {\n  return (\n    <Grid container spacing={2}>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('1')}>1</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('2')}>2</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('3')}>3</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('A')}>A</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('4')}>4</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('5')}>5</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('6')}>6</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('B')}>B</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('7')}>7</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('8')}>8</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('9')}>9</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('C')}>C</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('*')}>*</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('0')}>0</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('#')}>#</Button>\n        </Grid>\n        <Grid item xs={3}>\n            <Button onClick={() => dtfm.playNote('D')}>D</Button>\n        </Grid>\n    </Grid>\n  );\n}\n\nexport default Encoder;\n","/**\n * This class is able to encode and output DTFM singals.\n */\n\nconst COL = [1209, 1336, 1477, 1633];\nconst ROW = [697, 770, 852, 941];\nconst LETTERS = \"123A456B789C*0#D\".split('');\n\nexport class DTFM {\n    private context: AudioContext;\n    private duration: number;\n\n    /**\n     * Initialises a new DTFM Encoder/Decoder.\n     */\n    constructor() {\n        this.context = new (window.AudioContext || (window as any).webkitAudioContext)();\n        this.duration = 0.2;\n    }\n\n    /**\n     * Sets the new duration for a single note.\n     * \n     * @param duration the new duration\n     */\n    setDuration(duration: number) {\n        this.duration = duration;\n    }\n\n    /**\n     * Plays a single note.\n     * A note can be a digit from 0 to 9, *, #, or the letters from A to D.\n     * \n     * @param sym the note to play\n     */\n    playNote(sym: string) {\n        const index = LETTERS.findIndex(x => x === sym);\n        if (index >= 0) {\n            const col = index % COL.length;\n            const row = Math.floor(index / COL.length);\n\n            this.play(COL[col], ROW[row]);\n        }\n    }\n\n    /**\n     * This helper method plays a two-frequency note.\n     * \n     * @param freq1 the first frequency\n     * @param freq2 the second frequency\n     */\n    private play(freq1: number, freq2: number) {\n        let osc1 = this.context.createOscillator();\n        let osc2 = this.context.createOscillator();\n\n        osc1.type = \"sine\";\n        osc2.type = \"sine\";\n\n        let gain1 = this.context.createGain();\n        let gain2 = this.context.createGain();\n        osc1.connect(gain1);\n        gain1.connect(this.context.destination);\n        gain1.gain.value = 0.1;\n        gain1.gain.setTargetAtTime(0, this.context.currentTime + this.duration, 0.015);\n        osc2.connect(gain2);\n        gain2.connect(this.context.destination);\n        gain2.gain.value = 0.1;\n        gain2.gain.setTargetAtTime(0, this.context.currentTime + this.duration, 0.015);\n\n        osc1.frequency.value = freq1;\n        osc2.frequency.value = freq2;\n        osc1.start();\n        osc2.start();\n        osc1.stop(this.context.currentTime + this.duration + 0.1);\n        osc2.stop(this.context.currentTime + this.duration + 0.1);\n    }\n};\n","import React from 'react';\nimport { Container, Paper, Typography } from '@material-ui/core';\nimport Encoder from './Encoder';\nimport { DTFM } from '../utils/dtfm';\n\nconst dtfm = new DTFM();\n\nconst App: React.FC = () => {\n  return (\n    <Container maxWidth=\"md\" style={{ padding: 20 }}>\n      <Paper style={{ padding: 10 }}>\n        <Typography variant=\"h3\">\n          DTFM Encoder/Decoder\n        </Typography>\n        <Typography gutterBottom>\n          This tool alows you to encode or decode DTFM signals.\n        </Typography>\n\n        <Typography variant=\"h4\">\n          DTFM Encoder\n        </Typography>\n        <Encoder dtfm={dtfm} />\n\n        <Typography variant=\"h4\">\n          DTFM Decoder\n        </Typography>\n      </Paper>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}